设计模式：策略模式

设计模式：单例模式

设计模式：观察者模式

设计模式：工厂方法模式

设计模式：抽象工厂方法模式 
6222020200076166947

82155603 


Create procedure Full_Search(@string varchar(100))  
as  
begin  
declare @tbname varchar(100)   
declare tbroy cursor  for select name from sysobjects    
where xtype='u'   --第一个游标遍历所有的表  
 
open tbroy  
fetch next from tbroy into @tbname  
while @@fetch_status=0 
begin  
    
 declare @colname varchar(100)  
 declare colroy cursor for select name from syscolumns  
 where id=object_id(@tbname) and xtype in (  
 select xtype from systypes  
 where name in ('varchar','nvarchar','char','nchar') --数据类型为字符型的字段  
 ) --第二个游标是第一个游标的嵌套游标，遍历某个表的所有字段  
 
 open colroy  
 fetch next from colroy into @colname  
 while @@fetch_status=0 
 begin  
   
 declare @sql nvarchar(4000),@j int  
 select @sql='select @i=count(1) from ' +quotename(@tbname) +'  where '+ quotename(@colname)+' like '+'''%'+@string+'%'''  
 exec sp_executesql @sql,N'@i int output',@i=@j output   --输出满足条件表的记录数  
 if @j>0  
 begin  
 declare @v varchar(8000)  
 set @v='select  distinct '+quotename(@colname)+' from ' +quotename(@tbname) +'  where '+ quotename(@colname)+' like '+'''%'+@string+'%'''  
 exec(@v)  
 end  
 fetch next from colroy into @colname  
 end         
   
 close colroy  
 deallocate colroy  
 
fetch next from tbroy into @tbname  
end  
close tbroy  
deallocate tbroy  
end  
 
exec Full_Search  '市场'  
 
drop proc Full_Search  






--2009年5月15日21:57:33  
--游标实例  利用游标循环表 根据userid赋值  
alter PROCEDURE CURSOR_EG1  
AS  
BEGIN  
declare @a int,@error int   
declare @temp varchar(50)--临时变量，用来保存游标值  
set @a=1 set @error=0  
BEGIN TRAN --申明事务  
--申明游标 为userid  
declare order_cursor CURSOR FOR select userid from usertable  
--打开游标  
open order_cursor  
 WHILE @@FETCH_STATUS = 0 --返回被 FETCH  语句执行的最后游标的状态，而不是任何当前被连接打开的游标的状态。  
  begin  
   --开始循环游标变量  
   FETCH NEXT FROM order_cursor INTO @temp  
   --执行sql操作  
   update usertable set userpwd=username ,chinesename=@a where userid=@temp  
   set @a=@a+1  
   set @error=@error+@@error --记录每次运行sql后 是否正确  0正确  
  end 
 
if @error=0--没有错误 统一提交事务  
 begin  
  commit tran--提交  
 end  
else  
 begin  
     rollback tran--回滚  
 end  

CLOSE order_cursor--关闭游标  
DEALLOCATE order_cursor--释放游标  
END  